/*
조건문, 반복문을 제어문이라고 함

제어문이란
조건에 따라서 코드블록을 실행하거나
반복실행하거나 하는 코드의 흐름을 개발자의 의도대로 제어할 수 있는 문을 의미함

코드블록이란
1개 이상의 문을 중괄호로 묶은 것을 코드블록이라고 함
js는 이 코드블록 하나를 하나의 실행 단위로 취급함

예) 
코드1
코드2
코드3
<--- 이렇게 코드가 따로 존재하면 js는 실행단위 3개로 인식

{코드1
코드2
코드3}
<--- 이렇게 코드가 {}코드블록으로 감싸져 있다면 1개의 실행단위로
한번에 실행하는 것이 js의 문법이라는 것


조건문이란
주어진 조건식의 평가 결과에 따라 코드블록의 실행을 결정하는 것
조건식은 참, 거짓 즉 불린값으로 평가 될 수 있는 표현식이어야 함

예)
let num = 2;
let result;
if (num > 0) {
	result = '양수';
	console.log(result);
} else {
	result = '음수';
	console.log(result);
}

if는 조건문의 키워드

첫번째 코드블록(if 뒤의 문)은 참일 때,
두번째 코드블록(else 뒤의 문)은 거짓일 때.

조건문에서는 둘 다 적용하는 게 아니라 둘 중 '하나만' 적용하는 것임
(if로 시작하는 전체 코드에서 단 하나의 결과가 나타남)

위의 식은 3번 실행하는 것임
전역변수 두 줄,
조건문을 한 줄로 침
 */

let num = 2;
let result;
if (num > 0) {
	result = '양수';
	console.log(result);
} else {
	result = '음수';
	console.log(result);
}

// 약간의 변형

if (num > 0) {
	result = '양수';
}
/*
조건문을 평가하여 참일 때는 위의 식을 실행하고, 거짓일 때는 식을 무시함(아무 일도 하지 않음)
따라서 if로 시작하는 전체 코드에서 0~1개의 결과가 나타날 수 있음
*/

// 또다른 변형

if (num != 0) {
	result = '양의정수거나 음의정수';
	// 첫번째 조건문에 참인경우
} else if (num > 0) {
	result = '양수';
	// 첫번째 조건문에 거짓이면서 두번째 조건문에 참
} else if (num < 0) {
	result = '음수';
	// 첫번째, 두번째에 거짓이면서 세번째에 참
} else {
	result = 0;
	// 모든 조건문에 거짓인 경우
}
/*
조건문은 많이 길어질 수도 있음 (좋은 코드는 아님)
첫번째 조건식을 잘 써서 짧게 만드는 게 관건
*/

// 홀수와 짝수를 구분하는 if문을 작성해보기
let x = 5;
let number;
// if (x % 2 == 1)
if (x % 2) {
	// 컴퓨터 언어에서 1은 참, 0은 거짓을 의미함.
	// 컴퓨터 언어마다 약간씩 다르긴 하지만 숫자 0,1을 가지고 불린값으로 인식함
	// (0이 거짓이고, 0 이외의 모든 수를 참이라고 함)
	number = '홀수';
} else {
	number = '짝수';
}

if (num > 0) {
	result = 30;
} else {
	result = 31;
}

if (num > 0) {
	result = 30;
} else if (num <= 0) {
	result = 31;
}
// 아래의 조건문이 더 좋고 확실할 수 있음,
// 기회비용이 큰 경우 아래처럼 정확히 적어주는 것이 좋음

if (num > 0) {
	result = 30;
}

if (num > 0) result = 30;

// 위아래 식은 같은 식임
// 한 줄의 경우에는 굳이 코드블록을 사용할 필요가 없음
// 실무에서는 무조건 아래처럼 씀

// 삼항 연산자

// 조건식 ? (조건식이 참일 때의 실행값) : (조건식이 거짓일 때의 실행값);

//  위의 x%2라는 if문을 삼항 연산자로 표현해보면,

x % 2 ? (result = '홀수') : (result = '짝수');

// x % 2 ? result = '홀수' : result = '짝수';
// 실무에서는 위와 같이 소괄호를 빼고 씀

/*
if문과 삼항 연산자의 차이점

if문은 코드의 흐름을 직관적으로 알아차리기 쉬움
그러나 if문 자체를 변수로 지정해 줄 수는 없음
(표현식이 아니므로 할당이 안됨)

반면에 삼항 연산자는 그 자체를 변수로 지정해 줄 수 있는 것이 엄청 큰 차이임

let aaa = x % 2 ? (result = '홀수') : (result = '짝수');
*/

// let num1 = prompt('좋아하는 숫자를 써주세요', '숫자만 쓰세요');
/*prompt는 js에 내장되어 있는 팝업창 같은 것
소괄호 안의 앞 내용은 안내문의 역할
뒷 내용은 작성할 칸에 placeholder의 역할을 함
*/

// if (num1 % 2 === 0) {
// 	alert('짝수입니당');
// } else {
// 	alert('홀수입니당');
// }

let res = confirm('정말로 탈퇴하시겠습니까 ㅠ0ㅠ?');
if (res) {
	alert('탈퇴됏어요');
} else {
	alert('ㅋㅋ굿');
}

/*
prompt는 input창을 제공함,
confirm은 예,아니오의 불린값만 제공함
*/
