@charset "utf-8";
* {
	margin: 0px;
	padding: 0px;
	box-sizing: border-box;
}

.hidden {
	position: absolute;
	top: -9999999px;
	opacity: 0;
}

/* flex 로 가운데 정렬 
body{
	display: flex;
	justify-content: center;
	align-items: center;
} */
.gallery {
	width: 400px;
	height: 500px;
	overflow: hidden;
	/* overflow: visible; 이 기본값
	overflow: auto, scroll; 넘치는 경우 스크롤로 보여줌
	overflow: hidden; 넘치는 경우 잘라내서 안보이게 함
	*/
	margin: 0 auto;

	/* 포지션으로 가운데정렬
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);  */
	position: relative;
}
.gallery a img {
	/* img 태그는 부모에게서 크기를 상속받지 않음 */
	width: 100%;
	height: 100%;
	object-fit: cover;
	/* 
	object-fit: fill; 기본값, 해당 너비, 높이 값에
	img를 무조건 끼워넣는 방식
	object-fit: cover; 양 옆의 너비를 해당 너비에 
	딱 맞춰넣고 위아래의 여백이나 컨텐츠는 신경쓰지 않음
	object-fit: contain; 위아래의 높이를 해당 높이에
	맞춰 놓고 양옆의 여백이나 컨텐츠는 신경쓰지 않음
	*/
}
.gallery button {
	width: 55px;
	height: 55px;
	border-radius: 50%;
	position: absolute;
	bottom: 5px;
	right: 5px;
	border: none;
	outline: none;
	z-index: 6;
}
.gallery button i {
	font-size: 25px;
}
.gallery div {
	width: 70%;
	position: absolute;
	top: 50%;
	left: 50%;
	transform: translate(-50%, -50%);
	font-size: 30px;
	color: #fff;
	opacity: 0;
	z-index: -1;
	transition: opacity 0.5s 0.4s;
	/* 대상, 시간, 지연시간 */
}
/* 투명 주는 법
display: none 효과를 줄 수 없음 (제이쿼리나 외부 플러그인으로 사용 가능)
opacity, z-index: 0 기능은 사용됨, 공간 있음, 상호작용됨(마우스 오버 시)
visibility: hidden 오파시티랑 비슷함
appearance: none 기능은 사용됨, 공간 없음
 */

.gallery strong {
	font-size: 32px;
	color: #693a2a;
}
.gallery::before,
.gallery::after {
	content: '';
	width: 55px;
	height: 55px;
	border-radius: 50%;
	position: absolute;
	bottom: 5px;
	right: 5px;
	transform: scale(0);
}
.gallery::before {
	background-color: rgba(0, 0, 0, 0.5);
	transition: all 0.5s; /* all일 경우엔 생략 가능 */
	/* transition-property: all;
	transition-duration: 0.5s; */
}
.gallery::after {
	background-color: #e6714e;
	transition: all 0.5s 0.2s;
	/* transition-property: all;
	transition-duration: 0.5s;
	transition-delay: 0.2s; */
}
.gallery.on div {
	opacity: 1;
	z-index: 5;
}
.gallery.on::before,
.gallery.on::after {
	transform: scale(25);
}
